sql.query.select.login_data = select employee.identifier, employee.password, occupation.title, employee.status from employee join occupation on employee.occupation_identifier = occupation.identifier where employee.identifier = ? and employee.password = ?
sql.query.select.occupation = select * from occupation
sql.query.select.profile = SELECT employee.identifier, employee.password, employee.full_name, occupation.title, employee.status FROM employee JOIN occupation ON employee.occupation_identifier = occupation.identifier WHERE employee.identifier = ?
sql.query.update.profile = update employee set password = ?, full_name = ? where identifier = ?
sql.query.select.user_list = select employee.identifier, employee.full_name, occupation.title, employee.status  from employee join occupation on employee.occupation_identifier = occupation.identifier
sql.query.insert.user = INSERT INTO Employee (identifier, password, full_name, occupation_identifier, status) VALUES (?, ?, ?, ?, 'offline')
sql.query.update.status = update employee set status = ? where identifier = ?
sql.query.delete.user = delete from employee where identifier = ?
sql.query.select.driver.active_request_list = select truckrequest.identifier, truck.model, truckrequest.action_type, truckrequest.sent_date,   COALESCE(employee.full_name, 'none') AS resolver_name, truckrequest.status from truckrequest left join employee on truckrequest.resolver_identifier = employee.identifier join truck on truckrequest.truck_identifier = truck.identifier where truck.host_identifier = ? AND truckrequest.status = 'sent' ORDER BY truckrequest.sent_date DESC
sql.query.select.driver.resolved_request_list = select truckrequest.identifier, truck.model, truckrequest.action_type, truckrequest.sent_date,   COALESCE(employee.full_name, 'none') AS resolver_name, truckrequest.status from truckrequest left join employee on truckrequest.resolver_identifier = employee.identifier join truck on truckrequest.truck_identifier = truck.identifier where truck.host_identifier = ? AND truckrequest.status != 'sent' ORDER BY truckrequest.sent_date DESC
sql.query.select.driver.storage_product_list = select product.identifier, product.title, product.description, storageproduct.quantity from storageproduct join product on storageproduct.identifier = product.identifier ORDER BY product.identifier
sql.query.select.driver.storage_truck_product_list = SELECT truckrequest.truck_identifier, product.title, product.description, truckwaybill.quantity FROM truckwaybill JOIN product ON truckwaybill.product_identifier = product.identifier JOIN truckrequest ON truckwaybill.identifier = truckrequest.identifier WHERE truck_identifier IN (SELECT identifier FROM truck WHERE host_identifier = ?)  AND NOT ((truckrequest.action_type = 'loading' OR truckrequest.action_type = 'entry') AND truckrequest.status = 'sent' OR (truckrequest.action_type = 'entry' AND truckrequest.status = 'declined')) ORDER BY truckrequest.truck_identifier
sql.query.select.driver.inside_truck_list = SELECT truck.identifier, truck.model, truck.host_identifier FROM truck WHERE truck.host_identifier = ? AND truck.identifier IN (SELECT truckrequest.truck_identifier FROM truckrequest WHERE truck_identifier NOT IN (SELECT truck_identifier FROM truck WHERE action_type = 'entry' AND (status = 'declined' OR status = 'sent')))
sql.query.select.driver.outside_truck_list = SELECT truck.identifier, truck.model, truck.host_identifier FROM truck WHERE truck.host_identifier = ? AND truck.identifier NOT IN (SELECT truckrequest.truck_identifier FROM truckrequest WHERE truck_identifier NOT IN (SELECT truck_identifier FROM truck WHERE action_type = 'entry' AND (status = 'declined' OR status = 'sent')))
sql.query.select.driver.loaded_truck_list = SELECT truck.identifier, truck.model, truck.host_identifier FROM truck WHERE truck.host_identifier = ? AND truck.identifier IN (SELECT truckrequest.truck_identifier FROM truckrequest WHERE truck_identifier NOT IN (SELECT truck_identifier FROM truck WHERE action_type = 'entry' AND (status = 'declined' OR status = 'sent'))) AND truck.identifier IN (SELECT truckrequest.truck_identifier FROM truckrequest WHERE identifier IN (SELECT truckwaybill.identifier FROM TruckWaybill))
sql.query.select.driver.unloaded_truck_list = SELECT truck.identifier, truck.model, truck.host_identifier FROM truck WHERE truck.host_identifier = ? AND truck.identifier IN (SELECT truckrequest.truck_identifier FROM truckrequest WHERE truck_identifier NOT IN (SELECT truck_identifier FROM truck WHERE action_type = 'entry' AND (status = 'declined' OR status = 'sent'))) AND truck.identifier NOT IN (SELECT truckrequest.truck_identifier FROM truckrequest WHERE identifier IN (SELECT truckwaybill.identifier FROM TruckWaybill))
sql.query.insert.driver.truck_request = INSERT INTO TruckRequest (truck_identifier, action_type, status, commentary, resolver_identifier, sent_date, resolver_response) VALUES (null, ?, 'sent', null, null, ?, null)
sql.query.update.driver.truck_request = UPDATE TruckRequest SET truck_identifier = ?, commentary = ? WHERE identifier = (SELECT MAX(identifier) FROM TruckRequest)
sql.query.delete.driver.truck_request = DELETE FROM TruckRequest WHERE truck_identifier IS NULL
sql.query.update.driver.return_waybill = UPDATE TruckWaybill SET identifier = (SELECT MAX(identifier) FROM TruckRequest WHERE truck_identifier = ? AND status = 'accepted') WHERE identifier = (SELECT MAX(identifier) FROM TruckRequest)
sql.query.delete.driver.id_truck_request =  DELETE FROM TruckRequest WHERE identifier = ?
sql.query.select.driver.product_identifier_list = select identifier, title from product order by identifier
sql.query.select.driver.storage_product_identifier_list = SELECT storageproduct.identifier, product.title FROM storageproduct JOIN product ON storageproduct.identifier = product.identifier order by storageproduct.identifier
sql.query.select.driver.truck_waybill = SELECT product.identifier, product.title, truckwaybill.quantity FROM product join truckwaybill on product.identifier = truckwaybill.product_identifier WHERE truckwaybill.identifier IN (SELECT MAX(identifier) FROM TruckRequest) ORDER BY product.identifier
sql.query.update.driver.current_waybill = UPDATE TruckWaybill SET identifier = (SELECT MAX(identifier) FROM TruckRequest) WHERE identifier = (SELECT MAX(identifier) FROM TruckRequest WHERE truck_identifier = ? AND status = 'accepted' AND identifier != (SELECT MAX(identifier) FROM TruckRequest))
sql.query.update.driver.last_accepted_waybill = UPDATE TruckWaybill SET identifier = (SELECT MAX(identifier) FROM TruckRequest WHERE truck_identifier = (SELECT truck_identifier FROM TruckRequest WHERE identifier = ?) AND status = 'accepted' AND identifier != (SELECT MAX(identifier) FROM TruckRequest)) WHERE identifier = ?   
sql.query.select.driver.id_truck_waybill = SELECT product.identifier, product.title, truckwaybill.quantity FROM product join truckwaybill on product.identifier = truckwaybill.product_identifier WHERE truckwaybill.identifier = ? ORDER BY product.identifier
sql.query.insert.driver.waybill = INSERT INTO TruckWaybill (identifier, product_identifier, quantity) VALUES ((SELECT MAX(identifier) FROM TruckRequest), (SELECT identifier FROM product WHERE title = ?), ?)
sql.query.update.driver.waybill = UPDATE TruckWaybill SET quantity = ? WHERE identifier = (SELECT MAX(identifier) FROM TruckRequest) AND product_identifier = (SELECT identifier FROM product WHERE title = ?)
sql.query.delete.driver.waybill = DELETE FROM TruckWaybill WHERE product_identifier = ? and identifier = (SELECT MAX(identifier) FROM TruckRequest)
sql.query.insert.driver.truck = INSERT INTO Truck (identifier, model, host_identifier) VALUES (?, ?, ?)
sql.query.delete.driver.truck = DELETE FROM Truck WHERE identifier = ?
sql.query.select.driver.request = SELECT truckrequest.identifier, truckrequest.truck_identifier, truckrequest.commentary, truckrequest.action_type, truckrequest.status, truckrequest.resolver_response, COALESCE(employee.full_name, 'none') FROM truckrequest LEFT JOIN employee ON truckrequest.resolver_identifier = employee.identifier WHERE truckrequest.identifier = ?
sql.query.select.moderator.used_product_list = SELECT identifier, title, COALESCE(description,  '-'), price FROM product WHERE identifier IN (SELECT product.identifier FROM storageproduct JOIN product ON storageproduct.identifier = product.identifier) OR identifier IN (SELECT product.identifier FROM truckwaybill JOIN product ON truckwaybill.product_identifier = product.identifier JOIN truckrequest ON truckwaybill.identifier = truckrequest.identifier WHERE NOT ((truckrequest.action_type = 'loading' OR truckrequest.action_type = 'entry') AND truckrequest.status = 'sent' OR (truckrequest.action_type = 'entry' AND truckrequest.status = 'declined'))) ORDER BY identifier
sql.query.select.moderator.unused_product_list = SELECT identifier, title, COALESCE(description,  '-'), price FROM product WHERE identifier NOT IN (SELECT product.identifier FROM storageproduct JOIN product ON storageproduct.identifier = product.identifier) AND identifier NOT IN (SELECT product.identifier FROM truckwaybill JOIN product ON truckwaybill.product_identifier = product.identifier JOIN truckrequest ON truckwaybill.identifier = truckrequest.identifier WHERE NOT ((truckrequest.action_type = 'loading' OR truckrequest.action_type = 'entry') AND truckrequest.status = 'sent' OR (truckrequest.action_type = 'entry' AND truckrequest.status = 'declined'))) ORDER BY identifier
sql.query.insert.moderator.product = INSERT INTO Product (title, description, price) VALUES (?, ?, ?)
sql.query.delete.moderator.product = DELETE FROM Product WHERE identifier = ?  
sql.query.select.storekeeper.active_request_list = SELECT truckrequest.identifier, truck.model, truckrequest.action_type, truckrequest.sent_date, COALESCE(employee.full_name, 'none') AS resolver_name, truckrequest.status FROM truckrequest LEFT JOIN employee ON truckrequest.resolver_identifier = employee.identifier JOIN truck ON truckrequest.truck_identifier = truck.identifier WHERE resolver_identifier is NULL ORDER BY truckrequest.sent_date DESC
sql.query.select.storekeeper.resolved_request_list = SELECT truckrequest.identifier, truck.model, truckrequest.action_type, truckrequest.sent_date, COALESCE(employee.full_name, 'none') AS resolver_name, truckrequest.status FROM truckrequest LEFT JOIN employee ON truckrequest.resolver_identifier = employee.identifier JOIN truck ON truckrequest.truck_identifier = truck.identifier WHERE resolver_identifier = ? ORDER BY truckrequest.sent_date DESC
sql.query.select.storekeeper.truck_list = SELECT truck.identifier, truck.model, employee.full_name FROM truck JOIN employee ON truck.host_identifier = employee.identifier WHERE truck.identifier IN (SELECT truck_identifier FROM truckrequest WHERE truck_identifier NOT IN (SELECT truck_identifier FROM truck WHERE action_type = 'entry' AND (status = 'declined' OR status = 'sent')))
sql.query.update.storekeeper.request = UPDATE TruckRequest SET status = ?, resolver_identifier = ?, sent_date = ? WHERE identifier = ?
sql.query.select.storekeeper.accept_loading = SELECT TruckWaybill.product_identifier, (COALESCE(storageproduct.quantity, 0) - truckwaybill.quantity) AS quantity FROM TruckWaybill LEFT JOIN StorageProduct ON TruckWaybill.product_identifier = storageproduct.identifier WHERE TruckWaybill.identifier = ?
sql.query.select.storekeeper.accept_unloading = SELECT TruckWaybill.product_identifier, (COALESCE(storageproduct.quantity, 0) + truckwaybill.quantity) AS quantity FROM TruckWaybill LEFT JOIN StorageProduct ON TruckWaybill.product_identifier = storageproduct.identifier WHERE TruckWaybill.identifier = ?
sql.query.delete.storekeeper.storage_product = DELETE FROM StorageProduct WHERE storageproduct.identifier IN (SELECT product.identifier FROM product join truckwaybill on product.identifier = truckwaybill.product_identifier WHERE truckwaybill.identifier = ?)
sql.query.insert.storekeeper.storage_product = INSERT INTO StorageProduct (identifier, quantity) VALUES (?, ?)
sql.query.delete.storekeeper.truck_request = DELETE FROM TruckRequest WHERE truck_identifier = (SELECT truck_identifier FROM TruckRequest WHERE identifier = ?)    
sql.query.delete.storekeeper.waybill = DELETE FROM TruckWaybill WHERE identifier = ?
sql.query.select.storekeeper.max_storage_product = SELECT TruckWaybill.product_identifier, COALESCE(StorageProduct.quantity, 0) FROM TruckWaybill LEFT JOIN StorageProduct ON TruckWaybill.product_identifier = StorageProduct.identifier WHERE TruckWaybill.identifier = ? ORDER BY TruckWaybill.product_identifier
sql.query.update.storekeeper.resolver_response = UPDATE TruckRequest SET resolver_response = ? WHERE identifier = ? 
